swirl()
library("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Getting_and_Cleaning_Data")
install_from_swirl("Data_Analysis")
swirl()
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
mydf <- read.csv(path2csv, stringAsFactors = FALSE)
?read.csv
mydf
mydf <- read.csv(path2csv)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
swirl
import swirl
mtcars
library(reshape2)
head(mtcars)
#MELTING DATA FRAMES#
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("mpg", "hp"))
head(carMelt, n=3)
tail(carMelt, n=3)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
mtcars
dcast(mtcars, cyl ~ hp, mean)
carMelt
carMelt2 <- melt(mtcars, id=c("carname", "gear", "cyl"), measure.vars = c("hp"))
carMelt2
dcast(carMelt2, cyl ~ hp, mean)
dcast(carMelt2, cyl ~ variable, mean)
tapply(InsectSprays$count, InsectSprays$spray, mean)
spIns <- split(InsectSprays$count, InsectSprays$spray)
spIns
spIns$F
library(plyr)
ddply(InsectSprays, .(spray), summarize, sum=sum(count))
ddply(InsectSprays, .(spray), summarize, tots=sum(count))
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
play()
by_cyl <- group_by(mtcars, cyl)
by_cyl
nxt()
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count, desc = TRUE)
?arrange
top_counts_sorted <- arrange(top_counts, count, desc)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = .99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
setwd("/Users/cfaw/datasciencecoursera/getclean_data/week3/data")
fileURL1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileURL2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileURL1, destfile="reviews.csv", method = "curl")
download.file(fileURL2, destfile="solutions.csv", method = "curl")
reviews = csv.read("reviews.csv"); solutions <- csv.read("solutions.csv")
reviews = read.csv("reviews.csv"); solutions <- read.csv("solutions.csv")
head(reviews, 2)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -gender)
gather(students, sex, count, -grade)
students2
gather(student2, sex_class, count
)
gather(student2, sex_class, count)
gather(students2, sex_class, count)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
play()
students2
nxt()
?separate
separate(res, sex_class, c("sex", "class"), sep = "_")
separate(res, sex_class, c("sex", "class"))
reset()
swirl()
submit()
students3
submit()
submit()
submit()
?gather
submit()
reset()
swirl()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric(class5)
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status="passed")
failed <- mutate(failed, status="failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
submit()
?separate
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?mutate
submit()
submit()
#Quiz for week 3
#using the which() function
setwd("/Users/cfaw/datasciencecoursera/getclean_data/week3/data")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "idahoData.csv", method = "curl")
idaho_data <- read.csv("idahoData.csv")
head(idaho_data)
idaho_data$ACR
agricultureLogical <- (idaho_data$ACR == 3 & idaho_data$AGS == 6)
agricultureLogical
which(agricultureLogical)
?which
install.packages("jpeg")
?jpeg
?quantile
library(jpeg)
#first download the picture:
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "jeff.jpg", method = "curl")
jpeg_pic <- jpeg(filename = "jeff.jpg", native = TRUE)
quantile(jpeg_pic, probs = c(.3, .25))
jpeg_pic <- jpeg(filename = "jeff.jpg")
quantile(jpeg_pic, probs = c(.3, .25))
jpeg_pic
?jpeg
?readJPEG
jpeg_pic <- readJPEG(filename = "jeff.jpg", native = TRUE)
quantile(jpeg_pic, probs = c(.3, .25))
jpeg_pic <- readJPEG("jeff.jpg", native = TRUE)
quantile(jpeg_pic, probs = c(.3, .25))
quantile(jpeg_pic, probs = c(.3, .8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv", method = "curl")
GDPdata <- read.csv("GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "education_data.csv", method = "curl")
EducationData <- read.csv("education_data.csv")
GDPdata
head(GDPdata)
names(GDPdata)
GDPdata$X
head(EducationData)
intersect(GDPdata$X, EducationData$CountryCode)
length(intersect(GDPdata$X, EducationData$CountryCode))
intersect(GDPdata$X, EducationData$CountryCode)
GDPdata$X
EducationData$CountryCode
mergedData <- merge(GDPdata, EducationData, by.x = "X", by.y = "CountryCode", all = TRUE)
mergedData
names(mergedData)
mergedData$X
mergedData$X[1]
mergedData$X[2]
(mergedData$X != "")
mergedData[(mergedData$X != "")]
mergedData <- merge(reviews, solutions, by.x = "solution_id", by.y = "id")
mergedData$X
mergedData
mergedData <- merge(GDPdata, EducationData, by.x = "X", by.y = "CountryCode")
mergedData$X
length(mergedData)
length(mergedData$X)
sum(!is.na(mergedData$X))
sum(!is.na(unique(mergedData$X)))
mergedData$Gross.domestic.product.2012
sort(mergedData$Gross.domestic.product.2012, decreasing = TRUE)
select(GDPdata)
GDPdata
select(GDPdata, X != "")
GDP <- tbl_df(GDPdata)
Edu <- tbl_df(EducationData)
GDP
GDP$X
filter(GDP, X != "")
GDP <- filter(GDP, X != "")
GDP
length()GDP$X
length(GDP$X)
Edu
Edu$CountryCode
intersect(GDP$X, Edu$CountryCode)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
library(data.table)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
unique(GDP$X)
length(unique(GDP$X))
length(unique(Edu$CountryCode))
intersect(unique(GDP$X), unique(Edu$CountryCode))
mergedData <- merge(GDP, Edu, by.x = "X", by.y = "CountryCode", all = TRUE)
mergedData
mergedData <- tbl_df(mergedData)
mergedData
mergedData <- filter(mergedData, mergedData$Gross.domestic.product.2012 != "")
mergedData
length(mergedData$X)
mergedData$X
mergedData
?mutate
mutate(mergedData, FullName = X.1)
rename(mergedData, FullName = X.1)
rename(mergedData, FullName = X.2, CountryCode = X, GPD_rank = Gross.domestic.product.2012)
finalData <- arrange(rename(mergedData, FullName = X.2, CountryCode = X, GDP_rank = Gross.domestic.product.2012), GDP_rank)
finalData
finalData$FullName
finalData <- arrange(rename(mergedData, FullName = X.2, CountryCode = X, GDP_rank = Gross.domestic.product.2012), GDP_rank, descending = TRUE)
finalData <- arrange(rename(mergedData, FullName = X.2, CountryCode = X, GDP_rank = Gross.domestic.product.2012), GDP_rank, descending = TRUE)
finalData <- arrange(rename(mergedData, FullName = X.2, CountryCode = X, GDP_rank = Gross.domestic.product.2012), desc(GDP_rank))
finalData$FullName
finalData
group_by(finalData, Income.Group)
finalData <- group_by(finalData, Income.Group)
summarize(finalData, average = mean(GDP_rank))
summarize(finalData, average = mean(as.integer(GDP_rank)))
